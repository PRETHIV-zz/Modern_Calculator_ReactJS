{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","historytext","inputtext","operator","interans","start","clicked","event","setState","target","name","eraseone","txt","i","length","clear","Number","op","console","log","ans","parseInt","a","calculate","b","isNaN","className","style","borderRadius","type","width","borderWidth","value","this","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27391625.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component{\n\n  state={\n    historytext:\"\",\n    inputtext:\"\",\n    operator:\".\",\n    interans:0,\n    start:true\n  }\n\n  clicked=(event)=>{\n   // var name=event.target.name;\n    this.setState({inputtext:this.state.inputtext+event.target.name});\n  }\n\n  eraseone=()=>{\n    var txt=\"\";\n    for(let i=0;i<this.state.inputtext.length-1;i++){\n      txt+=this.state.inputtext[i];\n    }\n    this.setState({inputtext:txt});\n  }\n\n  clear=()=>{\n      this.setState({inputtext:\"\",historytext:\"\"});\n      this.setState({start:true,interans:0});\n  }\n\n  operator=(event)=>{\n    if(this.state.inputtext===\"0\"&&this.state.operator===\"*\"){\n      this.setState({historytext:\"0\",interans:0,inputtext:\"\"});\n      return;\n    }\n    if(!Number(this.state.inputtext)){\n      this.setState({operator:event.target.name});\n      return;\n    }\n    var op=event.target.name;\n    console.log(\"OP val \"+op);\n    this.setState({historytext:this.state.inputtext});\n    this.setState({inputtext:\"\"});\n    if(op===\"+\"){ console.log(\"Plus et\"); this.setState({operator:\"+\"});}\n    else if(op===\"-\"){this.setState({operator:\"-\"});}\n    else if(op===\"*\"){this.setState({operator:\"*\"});}\n    else{this.setState({operator:\"/\"});}\n    if(this.state.start){\n        let ans=parseInt(this.state.inputtext);\n        //console.log(\"A \"+this.state.inputtext);\n        //console.log(\"L \"+this.state.historytext.length);\n        this.setState({interans:ans,start:false}); \n        //console.log(\"ans \"+ans+this.state.interans);  \n    }\n    else{\n        var a=parseInt(this.state.inputtext);\n        if(op===\"+\"){\n          let ans=this.state.interans+a;\n          this.setState({historytext:ans,interans:ans});\n        }\n        else if(op===\"-\"){\n          let ans=this.state.interans-a;\n          this.setState({historytext:ans,interans:ans});\n        }\n        else if(op===\"*\"){\n          let ans=this.state.interans*a;\n          this.setState({historytext:ans,interans:ans});\n        }\n        else{\n          let ans=this.state.interans/a;\n          this.setState({historytext:ans,interans:ans});\n        }\n    }\n  }\n\n  calculate=()=>{\n    console.log(\"Calc for \"+this.state.operator);\n    var a=parseInt(this.state.inputtext);\n    var b=parseInt(this.state.historytext);\n    if(isNaN(a)){\n      console.log(\"Returning back the control\");\n      return;\n    }\n    //console.log(\"LA \"+a.length+\" LB \"+b.length);\n    if(this.state.operator===\"+\"){ this.setState({historytext:(a+b),interans:(a+b)}); }\n    else if(this.state.operator===\"-\"){ this.setState({historytext:a-b,interans:(a-b)}); }\n    else if(this.state.operator===\"*\"){ this.setState({historytext:a*b,interans:(a*b)}); }\n    else{ this.setState({historytext:a/b,interans:(a/b)}); }\n    this.setState({inputtext:\"\"});\n  }\n\n  render(){\n    return (\n    <div className=\"container-fluid bg-dark\">\n      \n      <div className=\"row\">\n        <div style={{borderRadius:10}} className=\"col-lg-2 col-md-2 col-xl-2 col-sm-2 bg-warning\">\n            <h2>Calci By Rocky</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-2 col-md-2 col-xl-2 col-sm-2 text-secondary\">\n            <input type=\"text\" style={{width:'100%',borderWidth:0}} value={this.state.historytext} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-2 col-md-2 col-xl-2 col-sm-2 text-white\">\n            <input type=\"text\" style={{width:'100%',borderWidth:0}} value={this.state.inputtext} />\n        </div>    \n      </div>\n      <div className=\"row\">\n        <button name=\"1\" onClick={this.clicked} className=\"btn btn-primary my-3 ml-3\">1</button>\n        <button name=\"2\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">2</button> \n        <button name=\"3\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">3</button> \n        <button name=\"+\" onClick={this.operator} className=\"btn btn-danger ml-3 my-3\">+</button> \n      </div>\n      <div className=\"row\">\n        <button name=\"4\" onClick={this.clicked} className=\"btn btn-primary my-3 ml-3\">4</button>\n        <button name=\"5\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">5</button> \n        <button name=\"6\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">6</button> \n        <button name=\"-\" onClick={this.operator} className=\"btn btn-danger ml-3 my-3\">-</button> \n      </div>\n      <div className=\"row\">\n        <button name=\"7\" onClick={this.clicked} className=\"btn btn-primary my-3 ml-3\">7</button>\n        <button name=\"8\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">8</button> \n        <button name=\"9\" onClick={this.clicked} className=\"btn btn-primary ml-3 my-3\">9</button> \n        <button name=\"*\" onClick={this.operator} className=\"btn btn-danger ml-3 my-3\">*</button> \n      </div>\n      <div className=\"row\">\n        <button name=\"0\" onClick={this.clicked} className=\"btn btn-primary my-3 ml-3\">0</button>\n        <button onClick={this.calculate} style={{width:85}} className=\"btn btn-warning my-3 ml-3\">   =  </button>\n        <button name=\"/\" onClick={this.operator} className=\"btn btn-danger my-3 ml-3\">/</button>\n      </div>\n      <div className=\"row\">\n        <button name=\"\" onClick={this.clear} className=\"btn btn-primary my-3 ml-3\">C</button>\n        <button name=\"\" onClick={this.eraseone} style={{width:130}} className=\"btn btn-primary ml-3 my-3\">Backspace</button> \n      </div>\n    </div>);\n    \n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}